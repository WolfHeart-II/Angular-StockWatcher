{"name":"Angular-StockWatcher","tagline":"Stock quotes watcher using live data from Yahoo! Finance API and Google Finance","body":"[![Build Status](https://travis-ci.org/philsawicki/Angular-StockWatcher.svg?branch=master)](https://travis-ci.org/philsawicki/Angular-StockWatcher)\r\n# Angular StockWatcher â€” Angular Stock Options Watcher\r\n\r\nThis Angular project is an application which queries the Yahoo! Finance API and Google Finance \r\nwebsite to retrieve live stock quotes for selected stocks.\r\n\r\n### Prerequisites\r\n\r\nYou must have node.js and its package manager (npm) installed. You can get them from \r\n[http://nodejs.org/](http://nodejs.org/).\r\n\r\n### Install Application\r\n\r\nJust run:\r\n\r\n```\r\ngulp build\r\nnpm install\r\n```\r\n\r\n### Run the Application\r\n\r\nThe project is preconfigured to run a simple development web server. The simplest way to start\r\nthis server is:\r\n\r\n```\r\nnpm start\r\n```\r\n\r\nNow browse to the app at `http://localhost:8000/app/` (or to `http://localhost:8000/dist/` for the\r\ncompiled and optimized production build).\r\n\r\n\r\n## Testing\r\n\r\nThere are two kinds of tests in the application: Unit tests and End to End tests.\r\n\r\n### Running Unit Tests\r\n\r\nThe app comes preconfigured with unit tests. These are written in\r\n[Jasmine][jasmine], and run with the [Karma Test Runner][karma]. The Karma\r\nconfiguration file to run them is provided with the app.\r\n\r\n* the configuration is found at `karma.conf.js`\r\n* the unit tests are found next to the code they are testing and are named as `..._test.js`.\r\n\r\nThe easiest way to run the unit tests is to use the supplied npm script:\r\n\r\n```\r\nnpm test\r\n```\r\n\r\nThis script will start the Karma test runner to execute the unit tests. Moreover, Karma will sit and\r\nwatch the source and test files for changes and then re-run the tests whenever any of them change.\r\nThis is the recommended strategy; if your unit tests are being run every time you save a file then\r\nyou receive instant feedback on any changes that break the expected code functionality.\r\n\r\nYou can also ask Karma to do a single run of the tests and then exit. This is useful if you want to\r\ncheck that a particular version of the code is operating as expected. The project contains a\r\npredefined script to do this:\r\n\r\n```\r\nnpm run test-single-run\r\n```\r\n\r\n\r\n### End to end testing\r\n\r\nThe app comes with end-to-end tests, again written in [Jasmine][jasmine]. These tests\r\nare run with the [Protractor][protractor] End-to-End test runner. It uses native events and has\r\nspecial features for Angular applications.\r\n\r\n* the configuration is found at `e2e-tests/protractor-conf.js`\r\n* the end-to-end tests are found in `e2e-tests/scenarios.js`\r\n\r\nProtractor simulates interaction with the web app and verifies that the application responds\r\ncorrectly. Therefore, the web server needs to be serving up the application, so that Protractor\r\ncan interact with it.\r\n\r\n```\r\nnpm start\r\n```\r\n\r\nIn addition, since Protractor is built upon WebDriver, it must be installed. The project comes \r\nwith a predefined script to do this:\r\n\r\n```\r\nnpm run update-webdriver\r\n```\r\n\r\nThis will download and install the latest version of the stand-alone WebDriver tool.\r\n\r\nOnce you have ensured that the development web server hosting the application is up and running\r\nand WebDriver is updated, you can run the end-to-end tests using the supplied npm script:\r\n\r\n```\r\nnpm run protractor\r\n```\r\n\r\nThis script will execute the end-to-end tests against the application being hosted on the\r\ndevelopment server.\r\n\r\n\r\n### Running the App during Development\r\n\r\nThe project comes preconfigured with a local development webserver. It is a node.js tool called \r\n[http-server][http-server]. You can start this webserver with `npm start` but you may choose to\r\ninstall the tool globally:\r\n\r\n```\r\nsudo npm install -g http-server\r\n```\r\n\r\nThen you can start your own development web server to serve static files from a folder by\r\nrunning:\r\n\r\n```\r\nhttp-server -a localhost -p 8000\r\n```\r\n\r\nAlternatively, you can choose to configure your own webserver, such as apache or nginx. Just\r\nconfigure your server to serve the files under the `app/` directory.\r\n\r\n\r\n## Contact\r\n\r\nFor more information, please check out http://philippesawicki.com\r\n","google":"UA-60737019-1","note":"Don't delete this file! It's used internally to help with page regeneration."}